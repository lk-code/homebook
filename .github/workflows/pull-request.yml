name: Pull Request

on:
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_VERSION: "9.0.x"
  FRONTEND_APPSETTINGS_FILE: "./source/HomeBook.Frontend/wwwroot/appsettings.json"
  BACKEND_APPSETTINGS_FILE: "./source/HomeBook.Backend/appsettings.json"
  OPENAPI_FILE: "./source/HomeBook.Backend/HomeBook.Backend.json"
  CLIENT_CSPROJ: "./source/HomeBook.Client/HomeBook.Client.csproj"
  CLIENT_OUTPUT_DIR: "./source/HomeBook.Client"
  CLIENT_NAMESPACE: "HomeBook.Client"

jobs:

  pull-request-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: |
          dotnet restore

      - name: Install Kiota CLI
        run: |
          dotnet tool install --global Microsoft.OpenApi.Kiota

      - name: Build
        run: |
          dotnet build --configuration Release --no-restore

      - name: Generate Client
        shell: bash
        run: |
          kiota generate \
            --language csharp \
            --class-name RestClient \
            --namespace-name ${{ env.CLIENT_NAMESPACE }} \
            --openapi ${{ env.OPENAPI_FILE }} \
            --output ${{ env.CLIENT_OUTPUT_DIR }} \

      - name: Build Client
        run: |
          dotnet build --configuration Release --no-restore

      - name: Test
        run: |
          dotnet test --configuration Release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build \
            --file ./Dockerfile \
            --build-arg FRONTEND_APPSETTINGS_FILE=${{ env.FRONTEND_APPSETTINGS_FILE }} \
            --build-arg BACKEND_APPSETTINGS_FILE=${{ env.BACKEND_APPSETTINGS_FILE }} \
            --tag test-image .
